/* Copyright © 2020 Gwindalmir */
using
Sandbox.ModAPI
;
using
System
;
using
VRage.Game.Components
;
using
VRage.ObjectBuilders
;
namespace
Gwindalmir
.
RealTimeTSS
{
public
class
ii0I0IoI0
:
MyGameLogicComponent
{
IMyTextSurfaceProvider
ol0loI0Il
;
public
event
Action
<
IMyTerminalBlock
,
Sandbox.ModAPI.Ingame.IMyTextSurface
,
int
>
oI1l1III0
;
private
ulong
ililoIOIl
=
0
;
public
override
void
Init
(
MyObjectBuilder_EntityBase
OoolOIOIl
)
{
base
.
Init
(
OoolOIOIl
)
;
if
(
MyAPIGateway
.
Utilities?.
IsDedicated
==
true
)
return
;
if
(
Entity
is
IMyTextSurfaceProvider
)
{
ol0loI0Il
=
Entity
as
IMyTextSurfaceProvider
;
NeedsUpdate
|=
VRage
.
ModAPI
.
MyEntityUpdateEnum
.
EACH_FRAME
;
}
}
public
override
void
Close
(
)
{
base
.
Close
(
)
;
oI1l1III0
=
null
;
}
public
override
void
UpdateAfterSimulation
(
)
{
base
.
UpdateAfterSimulation
(
)
;
if
(
ililoIOIl
++
%
2
==
0
)
{
for
(
var
Ioll0IlI1
=
0
;
Ioll0IlI1
<
ol0loI0Il
.
SurfaceCount
;
Ioll0IlI1
++
)
{
oI1l1III0?.
Invoke
(
Entity
as
IMyTerminalBlock
,
ol0loI0Il
.
GetSurface
(
Ioll0IlI1
)
,
Ioll0IlI1
)
;
}
}
}
}
}
